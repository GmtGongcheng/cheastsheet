0 用途：
在一台机器上拉取镜像；
将镜像的repository tag成local registry，并推送；
使用ansible在集群所有节点拉取镜像；
将各节点上的镜像名称还原。

1 pull-distribute-tag.sh脚本内容：
#!/bin/sh

set -e

if [ ! -x "$(command -v docker)" ]; then
  echo "$(date) - [ERROR] - no docker installed!"
  sleep 3
  exit 1
fi
if [ ! -x "$(command -v ansible)" ]; then
  echo "$(date) - [ERROR] - no ansible installed!"
  sleep 3
  exit 1
fi

LOCAL_REPO="172.31.78.217:5000"
DOCKER_HUB="lowyard"

IMAGES="$*"
if [ -z "$IMAGES" ]; then
  IMAGES="k8s.gcr.io/hyperkube:v1.0.7 \
  gcr.io/kubeflow-images-public/tf-model-server-http-proxy:v20180327-995786ec \
  gcr.io/kubeflow-images-public/tf-model-server-cpu:v20180327-995786ec \
  gcr.io/kubeflow-images-public/tf-model-server-gpu:v20180327-995786ec \
  gcr.io/kubeflow/tf-benchmarks-cpu:v20171202-bdab599-dirty-284af3 \
  gcr.io/kubeflow/tf-benchmarks-gpu:v20171202-bdab599-dirty-284af3 \
  gcr.io/cloud-solutions-group/esp-sample-app:1.0.0 \
  gcr.io/google_containers/spartakus-amd64:v1.0.0 \
  gcr.io/kubeflow-images-public/envoy:v20180309-0fb4886b463698702b6a08955045731903a18738 \
  gcr.io/kubeflow-images-public/tf_operator:v20180329-a7511ff \
  gcr.io/kubeflow/jupyterhub-k8s:1.0.1 \
  gcr.io/kubeflow-images-public/tf_operator:v20180226-403 \
  gcr.io/kubeflow-images-public/tensorflow-1.4.1-notebook-cpu:v20180419-0ad94c4e \
  gcr.io/kubeflow/tensorflow-notebook-cpu"
fi

function pull_distribute_tag() {
  IMAGE=$1
  NAME=${IMAGE%%:*}
  TAG=${IMAGE##*:}
  [ -z "$TAG" ] && TAG="latest"
  #echo $NAME
  #echo $TAG
  if [[ -n "$(docker images | grep $NAME)"  && -n "$(docker images | grep $TAG)" ]]; then
    echo "$(date) - [WARN] - $IMAGE already existed."
  else
    docker pull $IMAGE 
    echo "$(date) - [INFO] - image $IMAGE pulled."
  fi
  NAME=${IMAGE##*/}
  docker tag $IMAGE ${LOCAL_REPO}/$NAME
  echo "$(date) - [INFO] - rename $IMAGE as ${LOCAL_REPO}/$NAME."
  docker push ${LOCAL_REPO}/$NAME
  echo "$(date) - [INFO] - image ${LOCAL_REPO}/$NAME pushed."
  ansible all -m shell -a "docker pull ${LOCAL_REPO}/$NAME"
  echo "$(date) - [INFO] - image ${LOCAL_REPO}/$NAME pulled at all nodes."
  ansible all -m shell -a "docker tag ${LOCAL_REPO}/$NAME $IMAGE"
  echo "$(date) - [INFO] - rename image ${LOCAL_REPO}/$NAME as ${IMAGE} at all nodes."
  ansible all -m shell -a "docker rmi ${LOCAL_REPO}/$NAME"
  echo "$(date) - [INFO] - delete temporary image ${LOCAL_REPO}/$NAME at all nodes."
}

for IMAGE in $IMAGES; do
  pull_distribute_tag $IMAGE
done
