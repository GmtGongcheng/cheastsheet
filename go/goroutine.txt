package main

import(
    "log"
    "sync"
)

func main() {
    const n = 10
    array := [n]int{}
    var wg sync.WaitGroup
    for i,_ := range array {
        array[i] = i
    } 
    done := make(chan struct{})
    for _,j := range array {
        wg.Add(1)
        go print(j,done,wg)
    }
    go func() {
        wg.Wait()
        close(done)
    }()
    for range array {
        <- done
    }
}


func print(n int,done chan struct{},wg sync.WaitGroup) {
    defer wg.Done()
    for i := 0; i <= 10+n; i++ {
        log.Printf("%d: %d",n,i)
    }
    done <- struct{}{}
}
